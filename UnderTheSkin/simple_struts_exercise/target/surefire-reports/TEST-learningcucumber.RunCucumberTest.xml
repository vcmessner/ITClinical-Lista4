<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="learningcucumber.RunCucumberTest" time="0.612" tests="44" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise\target\test-classes;C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise\target\classes;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-java\7.12.0\cucumber-java-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-core\7.12.0\cucumber-core-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-gherkin\7.12.0\cucumber-gherkin-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.12.0\cucumber-gherkin-messages-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\gherkin\26.2.0\gherkin-26.2.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\messages\22.0.0\messages-22.0.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\tag-expressions\5.0.1\tag-expressions-5.0.1.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-expressions\16.1.2\cucumber-expressions-16.1.2.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\datatable\7.12.0\datatable-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-plugin\7.12.0\cucumber-plugin-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\docstring\7.12.0\docstring-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\html-formatter\20.3.0\html-formatter-20.3.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\junit-xml-formatter\0.2.0\junit-xml-formatter-0.2.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\ci-environment\9.2.0\ci-environment-9.2.0.jar;C:\Users\Harukatsu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-junit-platform-engine\7.12.0\cucumber-junit-platform-engine-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite\1.9.3\junit-platform-suite-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-api\1.9.3\junit-platform-suite-api-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.9.3\junit-platform-suite-engine-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.9.3\junit-platform-suite-commons-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\struts2-core\2.5.30\struts2-core-2.5.30.jar;C:\Users\Harukatsu\.m2\repository\org\freemarker\freemarker\2.3.31\freemarker-2.3.31.jar;C:\Users\Harukatsu\.m2\repository\ognl\ognl\3.1.29\ognl-3.1.29.jar;C:\Users\Harukatsu\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Harukatsu\.m2\repository\org\apache\logging\log4j\log4j-api\2.12.4\log4j-api-2.12.4.jar;C:\Users\Harukatsu\.m2\repository\commons-fileupload\commons-fileupload\1.4\commons-fileupload-1.4.jar;C:\Users\Harukatsu\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\Harukatsu\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\struts2-junit-plugin\2.5.30\struts2-junit-plugin-2.5.30.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-test\4.3.26.RELEASE\spring-test-4.3.26.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-core\4.3.26.RELEASE\spring-core-4.3.26.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Harukatsu\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Harukatsu\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Harukatsu\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Harukatsu\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\xwork\xwork-core\2.3.30\xwork-core-2.3.30.jar;C:\Users\Harukatsu\.m2\repository\asm\asm\3.3\asm-3.3.jar;C:\Users\Harukatsu\.m2\repository\asm\asm-commons\3.3\asm-commons-3.3.jar;C:\Users\Harukatsu\.m2\repository\asm\asm-tree\3.3\asm-tree-3.3.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-web\4.3.30.RELEASE\spring-web-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-aop\4.3.30.RELEASE\spring-aop-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-beans\4.3.30.RELEASE\spring-beans-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-context\4.3.30.RELEASE\spring-context-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-expression\4.3.30.RELEASE\spring-expression-4.3.30.RELEASE.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="32"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="BR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\Harukatsu\AppData\Local\Temp\surefire3412430706176937173\surefirebooter-20230530053840734_3.jar C:\Users\Harukatsu\AppData\Local\Temp\surefire3412430706176937173 2023-05-30T05-38-40_389-jvmRun1 surefire-20230530053840734_1tmp surefire_0-20230530053840734_2tmp"/>
    <property name="surefire.test.class.path" value="C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise\target\test-classes;C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise\target\classes;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-java\7.12.0\cucumber-java-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-core\7.12.0\cucumber-core-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-gherkin\7.12.0\cucumber-gherkin-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-gherkin-messages\7.12.0\cucumber-gherkin-messages-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\gherkin\26.2.0\gherkin-26.2.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\messages\22.0.0\messages-22.0.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\tag-expressions\5.0.1\tag-expressions-5.0.1.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-expressions\16.1.2\cucumber-expressions-16.1.2.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\datatable\7.12.0\datatable-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-plugin\7.12.0\cucumber-plugin-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\docstring\7.12.0\docstring-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\html-formatter\20.3.0\html-formatter-20.3.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\junit-xml-formatter\0.2.0\junit-xml-formatter-0.2.0.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\ci-environment\9.2.0\ci-environment-9.2.0.jar;C:\Users\Harukatsu\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Harukatsu\.m2\repository\io\cucumber\cucumber-junit-platform-engine\7.12.0\cucumber-junit-platform-engine-7.12.0.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite\1.9.3\junit-platform-suite-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-api\1.9.3\junit-platform-suite-api-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-engine\1.9.3\junit-platform-suite-engine-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-suite-commons\1.9.3\junit-platform-suite-commons-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.3\junit-platform-launcher-1.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\struts2-core\2.5.30\struts2-core-2.5.30.jar;C:\Users\Harukatsu\.m2\repository\org\freemarker\freemarker\2.3.31\freemarker-2.3.31.jar;C:\Users\Harukatsu\.m2\repository\ognl\ognl\3.1.29\ognl-3.1.29.jar;C:\Users\Harukatsu\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Harukatsu\.m2\repository\org\apache\logging\log4j\log4j-api\2.12.4\log4j-api-2.12.4.jar;C:\Users\Harukatsu\.m2\repository\commons-fileupload\commons-fileupload\1.4\commons-fileupload-1.4.jar;C:\Users\Harukatsu\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\Harukatsu\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\struts2-junit-plugin\2.5.30\struts2-junit-plugin-2.5.30.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-test\4.3.26.RELEASE\spring-test-4.3.26.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-core\4.3.26.RELEASE\spring-core-4.3.26.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Harukatsu\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Harukatsu\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Harukatsu\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Harukatsu\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\Harukatsu\.m2\repository\org\apache\struts\xwork\xwork-core\2.3.30\xwork-core-2.3.30.jar;C:\Users\Harukatsu\.m2\repository\asm\asm\3.3\asm-3.3.jar;C:\Users\Harukatsu\.m2\repository\asm\asm-commons\3.3\asm-commons-3.3.jar;C:\Users\Harukatsu\.m2\repository\asm\asm-tree\3.3\asm-tree-3.3.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-web\4.3.30.RELEASE\spring-web-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-aop\4.3.30.RELEASE\spring-aop-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-beans\4.3.30.RELEASE\spring-beans-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-context\4.3.30.RELEASE\spring-context-4.3.30.RELEASE.jar;C:\Users\Harukatsu\.m2\repository\org\springframework\spring-expression\4.3.30.RELEASE\spring-expression-4.3.30.RELEASE.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Harukatsu"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre"/>
    <property name="basedir" value="C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\Harukatsu\AppData\Local\Temp\surefire3412430706176937173\surefirebooter-20230530053840734_3.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\resources.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\rt.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\sunrsasign.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\jsse.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\jce.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\charsets.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\jfr.jar;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_372-372-b07"/>
    <property name="user.name" value="Harukatsu"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK Server VM"/>
    <property name="localRepository" value="C:\Users\Harukatsu\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\HARUKA~1\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_372-372"/>
    <property name="user.dir" value="C:\Users\Harukatsu\Workspace\Learning\Work\Lista4\UnderTheSkin\simple_struts_exercise"/>
    <property name="os.arch" value="x86"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-17.0.7.7-hotspot\bin;C:\Program Files\Microsoft\jdk-11.0.12.7-hotspot\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Users\Harukatsu\AppData\Local\Programs\Python\Python39;C:\Users\Harukatsu\AppData\Local\Programs\Python\Python39\Scripts;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Users\Harukatsu\Workspace\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Go\bin;C:\Program Files\RedHat\java-11-openjdk-11.0.19-1\bin;C:\Users\Harukatsu\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jdk1.8.0_311\bin;C:\Users\Harukatsu\.dotnet\tools;C:\Users\Harukatsu\AppData\Roaming\npm;C:\Users\Harukatsu\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Harukatsu\AppData\Roaming\Composer\vendor\bin;C:\msys64\mingw64\bin;C:\Gradle\bin;C:\Users\Harukatsu\go\bin;C:\Program Files\apache-maven-3.9.2\bin;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="OpenLogic-OpenJDK"/>
    <property name="java.vm.version" value="25.372-b07"/>
    <property name="java.specification.maintenance.version" value="4"/>
    <property name="java.ext.dirs" value="C:\Program Files (x86)\OpenLogic\jdk-8.0.372.07-hotspot\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="Example #1.1" classname="Examples" time="0.172">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:11&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m36525&amp#27;[0m                                                   &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"True"&amp#27;[0m                                                               &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
    <system-err><![CDATA[ERROR StatusLogger Log4j2 could not find a logging implementation. Please add log4j-core to the classpath. Using SimpleLogger to log to the console...
]]></system-err>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.011">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:11&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/1900"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                  &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:28&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/1900"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                  &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:48&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/1900"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                     &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:65&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/1900"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                        &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.011">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:12&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Sunday"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m6574&amp#27;[0m                                                  &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"True"&amp#27;[0m                                                               &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:12&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2005"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                  &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:29&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2002"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                  &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:49&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2007"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                     &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:66&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2007"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"success"&amp#27;[0m                                        &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.008">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:13&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"John"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m7670&amp#27;[0m                                                    &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"True"&amp#27;[0m                                                               &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:13&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"31/12/2005"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:30&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"31/12/2002"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:50&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"31/12/2007"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:67&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"31/12/2007"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.007">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:14&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m5478&amp#27;[0m                                                    &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"False"&amp#27;[0m                                                              &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:14&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2006"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:31&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2003"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:51&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2008"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:68&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2008"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.5" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:15&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m-1&amp#27;[0m                                                      &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"False"&amp#27;[0m                                                              &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.5" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid            &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:15&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Sunday"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                         &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                      &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.5" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid            &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:32&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Sunday"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                         &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                      &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.5" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid            &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:52&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Sunday"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/3000"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                            &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                         &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.5" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid            &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:69&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Sunday"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/3000"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                               &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                            &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.6" classname="Examples" time="0.007">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:16&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m30&amp#27;[0m                                                      &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"False"&amp#27;[0m                                                              &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.6" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:16&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/13/2010"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.6" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:33&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/13/2010"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.6" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:53&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/13/2010"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.6" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:70&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/13/2010"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.7" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                   &amp#27;[90m# learningcucumber/IsUserAllowed.feature:17&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m36525&amp#27;[0m                                                       &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"False"&amp#27;[0m                                                              &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.7" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:17&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"29/02/2010"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.7" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:34&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"29/02/2010"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.7" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:54&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"29/02/2010"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.7" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:71&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"29/02/2010"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.8" classname="Examples" time="0.008">
    <system-out><![CDATA[
Scenario Outline: user is (Dis)allowed in the specific dates conting from today                                                                                        &amp#27;[90m# learningcucumber/IsUserAllowed.feature:18&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mthe name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."&amp#27;[0m&amp#27;[32m and days interval &amp#27;[0m&amp#27;[32m&amp#27;[1m36526&amp#27;[0m &amp#27;[90m# learningcucumber.IsUserAllowed.userSubmitsName(java.lang.String,int)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mwe want to abstract the user date input and check if the day intervals provide valid reply&amp#27;[0m                                                                      &amp#27;[90m# learningcucumber.IsUserAllowed.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32muser allowed value is &amp#27;[0m&amp#27;[32m&amp#27;[1m"True"&amp#27;[0m                                                                                                                                    &amp#27;[90m# learningcucumber.IsUserAllowed.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.8" classname="Examples" time="0.006">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid      &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:18&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                   &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.8" classname="Examples" time="0.007">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid      &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:35&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                   &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.8" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid      &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:55&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                      &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                   &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.8" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid      &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:72&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                         &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                      &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.9" classname="Examples" time="0.005">
    <system-out><![CDATA[
Scenario Outline: Country is UK and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:19&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from UK&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUKInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.9" classname="Examples" time="0.004">
    <system-out><![CDATA[
Scenario Outline: Country is US and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:36&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from US&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsUSInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                    &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.9" classname="Examples" time="0.02">
    <system-out><![CDATA[
Scenario Outline: Country is Spain and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:56&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from Spain&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsSPInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                       &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.9" classname="Examples" time="0.003">
    <system-out><![CDATA[
Scenario Outline: Country is Portugal and user inputs are valid          &amp#27;[90m# learningcucumber/UnderTheSkinIntegration.feature:73&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32muser submits name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Algo"&amp#27;[0m&amp#27;[32m, date &amp#27;[0m&amp#27;[32m&amp#27;[1m"24/05/2010"&amp#27;[0m&amp#27;[32m and is from Portugal&amp#27;[0m &amp#27;[90m# learningcucumber.ValidateInputAndAge.userSubmitsPORInput(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mi ask whether user the input is valid&amp#27;[0m                             &amp#27;[90m# learningcucumber.ValidateInputAndAge.iAskWhetherUserIsAllowed()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32minput is valid = &amp#27;[0m&amp#27;[32m&amp#27;[1m"input"&amp#27;[0m                                          &amp#27;[90m# learningcucumber.ValidateInputAndAge.userAllowedValueIs(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>